plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.2'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'com.google.cloud.tools.jib' version '3.4.3'
}

group = 'com.kakao'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Web
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	/**
	 * Spring Devtools
	 * Automatic Restart를 통해 claapath에 있는 파일이 변경될 때마다 애플리케이션을 자동으로 재시작해준다.
	 * Live Reload를 통해 정적 자원(html, css, js) 수정 시 새로고침 없이 바로 적용된다.
	 */
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// Spring Validaion: @Valid 등의 유효성 검사를 위한 검증 어노테이션을 사용할 수 있다.
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// Springdoc Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

	// Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'

	// Spring Data JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// MariaDB
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

	// Lombok: 어노테이션을 통해 보일러플레이트 코드를 줄일 수 있는 라이브러리
	testImplementation 'org.projectlombok:lombok:1.18.22'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// AWS S3: Amazon S3 Bucket을 사용하여 이미지를 괸리한다.
	implementation 'io.awspring.cloud:spring-cloud-starter-aws:2.3.1'
	testImplementation 'io.findify:s3mock_2.12:0.2.4'

	// Testcontainers for Java: JUnit5
	testImplementation "org.testcontainers:junit-jupiter:1.19.7"
	testImplementation "org.testcontainers:mariadb:1.19.7"

	// minio
	implementation 'io.minio:minio:8.5.12'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.named('jib') {
	dependsOn 'test'
}
